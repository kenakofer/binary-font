@bin = [zero one];
@binoutlower = [xx0 xx1];
@binoutupper = [xxx0 xxx1];
@binout = [@binoutlower @binoutupper];
@binhexout = [x0 x1];

@nonbinhex = [two three four five six seven eight nine A B C D E F];
@hex = [@bin @nonbinhex];
@nonbinhexout = [x2 x3 x4 x5 x6 x7 x8 x9 xAhinted xBhinted xChinted xDhinted xEhinted xFhinted];
@binhexoutupper = [x0 xxx1];
@nonbinhexouttrimmed = [x2trimmed x3trimmed x4trimmed x5trimmed x6trimmed x7trimmed];
@nonbinhexoutuntrimmed = [x8 x9 xAhinted xBhinted xChinted xDhinted xEhinted xFhinted];
@nonbinhexoutupper = [@nonbinhexouttrimmed @nonbinhexoutuntrimmed];
@hexout = [@binhexout @nonbinhexout hexseparator @nonbinhexouttrimmed xxx1];

@nonhexout = [a b c d e f g h i j k l m n o p q r s t u v w x y z A B C D E F G H I J K L M N O P Q R S T U V W X Y Z ];

@nonhexin = [a b c d e f g h i j k l m n o p q r s t u v w x y z G H I J K L M N O P Q R S T U V W X Y Z ];

feature liga {
  # <</>> with guillemot
  sub less less by guillemotleft;
  sub greater greater by guillemotright;
  # +- with plusminus
  sub plus hyphen by plusminus;

} liga;

feature liga {
  # Half width spaces after spaces
  sub space space' by halfspace;
  sub halfspace space' by halfspace;
  sub @hexout space' by halfspace;
  sub @binout space' by halfspace;
  
  ignore sub @nonhexout @hex';
  ignore sub @hex @hex';

  # Ignore since later characters show this isn't a number
  ignore sub @hex' @nonhexin;
  ignore sub @hex' @hex @nonhexin;
  ignore sub @hex' @hex @hex @nonhexin;
  ignore sub @hex' @hex @hex @hex @nonhexin;
  ignore sub @hex' @hex @hex @hex @hex @nonhexin;
  ignore sub @hex' @hex @hex @hex @hex @hex @nonhexin;
  ignore sub @hex' @hex @hex @hex @hex @hex @hex @nonhexin;
  ignore sub @hex' @hex @hex @hex @hex @hex @hex @hex @nonhexin;
  ignore sub @hex' @hex @hex @hex @hex @hex @hex @hex @hex @nonhexin;
  ignore sub @hex' @hex @hex @hex @hex @hex @hex @hex @hex @hex @nonhexin;
  ignore sub @hex' @hex @hex @hex @hex @hex @hex @hex @hex @hex @hex @nonhexin;
  ignore sub @hex' @hex @hex @hex @hex @hex @hex @hex @hex @hex @hex @hex @nonhexin;
  ignore sub @hex' @hex @hex @hex @hex @hex @hex @hex @hex @hex @hex @hex @hex @nonhexin;
  ignore sub @hex' @hex @hex @hex @hex @hex @hex @hex @hex @hex @hex @hex @hex @hex @nonhexin;
  ignore sub @hex' @hex @hex @hex @hex @hex @hex @hex @hex @hex @hex @hex @hex @hex @hex @nonhexin;
  ignore sub @hex' @hex @hex @hex @hex @hex @hex @hex @hex @hex @hex @hex @hex @hex @hex @hex @nonhexin;
  ignore sub @hex' @hex @hex @hex @hex @hex @hex @hex @hex @hex @hex @hex @hex @hex @hex @hex @hex @nonhexin;
  
  # Handling encountering a " a " in a text
  # Convert if  a or following other hexout
  sub @hexout space a' space by xA;
  sub space space a' by xA;
  # Ignore if followed by a space
  ignore sub space a' space;



  # Determined by prior
  sub @hexout @nonbinhex' by @nonbinhexout;
  sub period @nonbinhex' by @nonbinhexout;
  
  # Determined by self
  sub @nonbinhex' by @nonbinhexoutupper;
  
  # Determined' by upcoming hex
  sub @bin' @nonbinhex by @binhexoutupper;
  sub @bin' @bin @nonbinhex by @binhexoutupper;
  sub @bin' @bin @bin @nonbinhex by @binhexoutupper;
  sub @bin' @bin @bin @bin @nonbinhex by @binhexoutupper;
  sub @bin' @bin @bin @bin @bin @nonbinhex by @binhexoutupper;
  sub @bin' @bin @bin @bin @bin @bin @nonbinhex by @binhexoutupper;
  sub @bin' @bin @bin @bin @bin @bin @bin @nonbinhex by @binhexoutupper;
  sub @bin' @bin @bin @bin @bin @bin @bin @bin @nonbinhex by @binhexoutupper;
  sub @bin' @bin @bin @bin @bin @bin @bin @bin @bin @nonbinhex by @binhexoutupper;
  sub @bin' @bin @bin @bin @bin @bin @bin @bin @bin @bin @nonbinhex by @binhexoutupper;
  sub @bin' @bin @bin @bin @bin @bin @bin @bin @bin @bin @bin @nonbinhex by @binhexoutupper;
  sub @bin' @bin @bin @bin @bin @bin @bin @bin @bin @bin @bin @bin @nonbinhex by @binhexoutupper;
  sub @bin' @bin @bin @bin @bin @bin @bin @bin @bin @bin @bin @bin @bin @nonbinhex by @binhexoutupper;
  sub @bin' @bin @bin @bin @bin @bin @bin @bin @bin @bin @bin @bin @bin @bin @nonbinhex by @binhexoutupper;
  sub @bin' @bin @bin @bin @bin @bin @bin @bin @bin @bin @bin @bin @bin @bin @bin @nonbinhex by @binhexoutupper;
  sub @bin' @bin @bin @bin @bin @bin @bin @bin @bin @bin @bin @bin @bin @bin @bin @bin @nonbinhex by @binhexoutupper;
  sub @bin' @bin @bin @bin @bin @bin @bin @bin @bin @bin @bin @bin @bin @bin @bin @bin @bin @nonbinhex by @binhexoutupper;

  # Determined' by previous
  sub @binout @bin' by @binoutlower;
  sub @hexout @bin' by @binhexout;

  # Pretty safe it's intended to be binary, and it's the first so use the one without the tail.
  sub @bin' by @binoutupper;

  # Omit commas between bin stuffs
  sub @binout comma' @bin by binseparator;
} liga;
